@page "/resource/{ResourceWebPath}"
@using Microsoft.Extensions.Configuration
@using PGDevOpsTips.Web.Services;
@using PGDevOpsTips.Domain.Models
@using System.Threading
@inject IConfiguration Configuration
@inject RestContentService RestContentService

@if (loading)
{
    <div class="container content-container">
        <div class="row">
            <div class="col-md-12">
                <p><em>Loading</em></p>
            </div>
        </div>
    </div>
}
else
{
    <HeaderComponent H1=@resourceViewModel.Resource.Title
                     Line1=@resourceViewModel.Resource.Published.ToLongDateString()
                     Line2=@resourceViewModel.Resource.Description
                     Line3=@resourceGitHubUrlText
                     Tags=@resourceViewModel.Resource.Categories />

    <div class="content-container">
        <div class="container">
            @((MarkupString)resourceContents)
        </div>


    </div>

    <div class="container-fluid">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <a href="resources" class="btn btn-primary"><i class="fas fa-angle-double-left" aria-hidden="true"></i> See all resources</a>
                </div>
            </div>
        </div>
    </div>

    <div class="container-fluid list-item-background-1">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h2>Got a comment?</h2>
                    <p>All my resources are written and managed as Markdown files on <a href=@($"{resourceViewModel.Resource.GitHubUrl}") target="_blank"><i class="fab fa-github fa-lg" aria-hidden="true"></i> GitHub</a>.</p>
                    <p>Please add an issue or submit a pull request if something is not right on this resource or you have a comment.</p>
                    <p>If you'd like to simply say "thanks", then please send me a <a href="@Configuration["Personalise:TwitterUrl"]" target="_blank"><i class="fab fa-twitter fa-lg" aria-hidden="true"></i></a> so the rest of Twitter can see how awesome my work is.</p>
                </div>
            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public string ResourceWebPath { get; set; }

    private string resourceContents;

    private bool loading;

    private string resourceGitHubUrlText;

    ResourceViewModel resourceViewModel { get; set; } = new ResourceViewModel();

    protected override async Task OnInitializedAsync()
    {
        loading = true;

        resourceViewModel.Resource = new Content();
        resourceViewModel.Resource = await RestContentService.GetContent(Configuration["Content:ContentsListApiPath"] + "/content?type=resource&property=WebPath&value=" + ResourceWebPath + "&drafts=true", default);
        if (resourceViewModel.Resource == default)
        {
            throw new NullReferenceException($"No resource with WebPath {ResourceWebPath}");
        }

        resourceContents = await RestContentService.GetBlobContent(Configuration["Content:ContentApiPath"] + "?blobname=" + resourceViewModel.Resource.HtmlBlobFileName, default);

        //Remove h1 if the resource starts with it. This is because the h1 is in the header so it will be duplicated
        if (resourceContents.ToLowerInvariant().StartsWith("<h1"))
        {
            resourceContents = resourceContents.Substring(resourceContents.ToLowerInvariant().IndexOf("</h1>"));
        }

        resourceGitHubUrlText = $"This resource is published at <a href='{resourceViewModel.Resource.GitHubUrl}' target='_blank'><i class='fab fa-github fa-lg' aria-hidden='true'></i> GitHub</a>. You can raise issues, create pull requests or even fork the content... its open source.";

        loading = false;
    }
}